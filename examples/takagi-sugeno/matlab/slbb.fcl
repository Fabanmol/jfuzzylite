FUNCTION_BLOCK slbb

VAR_INPUT
  in1: REAL;
  in2: REAL;
  in3: REAL;
  in4: REAL;
END_VAR

VAR_OUTPUT
  out: REAL;
END_VAR

FUZZIFY in1
  ENABLED : TRUE;
  RANGE := (-1.50000000 .. 1.50000000);
  TERM in1mf1 := Bell -1.50000000 1.50000000 2.00000000;
  TERM in1mf2 := Bell 1.50000000 1.50000000 2.00000000;
END_FUZZIFY

FUZZIFY in2
  ENABLED : TRUE;
  RANGE := (-1.50000000 .. 1.50000000);
  TERM in2mf1 := Bell -1.50000000 1.50000000 2.00000000;
  TERM in2mf2 := Bell 1.50000000 1.50000000 2.00000000;
END_FUZZIFY

FUZZIFY in3
  ENABLED : TRUE;
  RANGE := (-0.20000000 .. 0.20000000);
  TERM in3mf1 := Bell -0.20000000 0.20000000 2.00000000;
  TERM in3mf2 := Bell 0.20000000 0.20000000 2.00000000;
END_FUZZIFY

FUZZIFY in4
  ENABLED : TRUE;
  RANGE := (-0.40000000 .. 0.40000000);
  TERM in4mf1 := Bell -0.40000000 0.40000000 2.00000000;
  TERM in4mf2 := Bell 0.40000000 0.40000000 2.00000000;
END_FUZZIFY

DEFUZZIFY out
  ENABLED : TRUE;
  RANGE := (-10.00000000 .. 10.00000000);
  TERM outmf1 := Linear 1.01500000 2.23400000 -12.66500000 -4.04600000 0.02600000;
  TERM outmf2 := Linear 1.16100000 1.96900000 -9.39600000 -6.16500000 0.47400000;
  TERM outmf3 := Linear 1.50600000 2.23400000 -12.99000000 -1.86500000 1.42600000;
  TERM outmf4 := Linear 0.73400000 1.96900000 -9.38100000 -4.68800000 -0.88000000;
  TERM outmf5 := Linear 0.73400000 2.23400000 -12.85300000 -6.11000000 -1.03400000;
  TERM outmf6 := Linear 1.41300000 1.96900000 -9.48500000 -6.59200000 1.15900000;
  TERM outmf7 := Linear 1.22500000 2.23400000 -12.80100000 -3.92900000 0.36600000;
  TERM outmf8 := Linear 0.98500000 1.96900000 -9.29100000 -5.11500000 -0.19500000;
  TERM outmf9 := Linear 0.98500000 1.96900000 -9.29200000 -5.11500000 0.19500000;
  TERM outmf10 := Linear 1.22500000 2.23400000 -12.80200000 -3.92900000 -0.36600000;
  TERM outmf11 := Linear 1.41300000 1.96900000 -9.48500000 -6.59200000 -1.15900000;
  TERM outmf12 := Linear 0.73400000 2.23400000 -12.85300000 -6.11000000 1.03400000;
  TERM outmf13 := Linear 0.73400000 1.96900000 -9.38100000 -4.68800000 0.88000000;
  TERM outmf14 := Linear 1.50600000 2.23400000 -12.99000000 -1.86500000 -1.42600000;
  TERM outmf15 := Linear 1.16100000 1.96900000 -9.39600000 -6.16500000 -0.47400000;
  TERM outmf16 := Linear 1.01500000 2.23400000 -12.66500000 -4.04600000 -0.02600000;
  METHOD : COGS;
  ACCU : MAX;
  DEFAULT := nan;
END_DEFUZZIFY

RULEBLOCK 
  ENABLED : TRUE;
  AND : PROD;
  OR : MAX;
  ACT : PROD;
  RULE 1 : if in1 is in1mf1 and in2 is in2mf1 and in3 is in3mf1 and in4 is in4mf1 then out is outmf1
  RULE 2 : if in1 is in1mf1 and in2 is in2mf1 and in3 is in3mf1 and in4 is in4mf2 then out is outmf2
  RULE 3 : if in1 is in1mf1 and in2 is in2mf1 and in3 is in3mf2 and in4 is in4mf1 then out is outmf3
  RULE 4 : if in1 is in1mf1 and in2 is in2mf1 and in3 is in3mf2 and in4 is in4mf2 then out is outmf4
  RULE 5 : if in1 is in1mf1 and in2 is in2mf2 and in3 is in3mf1 and in4 is in4mf1 then out is outmf5
  RULE 6 : if in1 is in1mf1 and in2 is in2mf2 and in3 is in3mf1 and in4 is in4mf2 then out is outmf6
  RULE 7 : if in1 is in1mf1 and in2 is in2mf2 and in3 is in3mf2 and in4 is in4mf1 then out is outmf7
  RULE 8 : if in1 is in1mf1 and in2 is in2mf2 and in3 is in3mf2 and in4 is in4mf2 then out is outmf8
  RULE 9 : if in1 is in1mf2 and in2 is in2mf1 and in3 is in3mf1 and in4 is in4mf1 then out is outmf9
  RULE 10 : if in1 is in1mf2 and in2 is in2mf1 and in3 is in3mf1 and in4 is in4mf2 then out is outmf10
  RULE 11 : if in1 is in1mf2 and in2 is in2mf1 and in3 is in3mf2 and in4 is in4mf1 then out is outmf11
  RULE 12 : if in1 is in1mf2 and in2 is in2mf1 and in3 is in3mf2 and in4 is in4mf2 then out is outmf12
  RULE 13 : if in1 is in1mf2 and in2 is in2mf2 and in3 is in3mf1 and in4 is in4mf1 then out is outmf13
  RULE 14 : if in1 is in1mf2 and in2 is in2mf2 and in3 is in3mf1 and in4 is in4mf2 then out is outmf14
  RULE 15 : if in1 is in1mf2 and in2 is in2mf2 and in3 is in3mf2 and in4 is in4mf1 then out is outmf15
  RULE 16 : if in1 is in1mf2 and in2 is in2mf2 and in3 is in3mf2 and in4 is in4mf2 then out is outmf16
END_RULEBLOCK

END_FUNCTION_BLOCK
