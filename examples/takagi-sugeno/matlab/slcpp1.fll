Engine: slcpp
InputVariable: in1
  enabled: true
  range: -0.300 0.300
InputVariable: in2
  enabled: true
  range: -1.000 1.000
InputVariable: in3
  enabled: true
  range: -3.000 3.000
InputVariable: in4
  enabled: true
  range: -3.000 3.000
InputVariable: in5
  enabled: true
  range: -3.000 3.000
InputVariable: in6
  enabled: true
  range: -3.000 3.000
InputVariable: pole_length
  enabled: true
  range: 0.500 1.500
  Term: mf1 ZShape 0.500 0.600
  Term: mf2 PiShape 0.500 0.600 0.600 0.700
  Term: mf3 PiShape 0.600 0.700 0.700 0.800
  Term: mf4 PiShape 0.700 0.800 0.800 0.900
  Term: mf5 PiShape 0.800 0.900 0.900 1.000
  Term: mf6 PiShape 0.900 1.000 1.000 1.100
  Term: mf7 PiShape 1.000 1.100 1.100 1.200
  Term: mf8 PiShape 1.100 1.200 1.200 1.300
  Term: mf9 PiShape 1.200 1.300 1.300 1.400
  Term: mf10 PiShape 1.300 1.400 1.400 1.500
  Term: mf11 SShape 1.400 1.500
OutputVariable: out
  enabled: true
  range: -10.000 10.000
  default: nan
  lock-valid: false
  lock-range: false
  defuzzifier: WeightedAverage
  accumulation: Maximum
  Term: outmf1 Linear 168.400 31.000 -188.050 -49.250 -1.000 -2.700 0.000 0.000
  Term: outmf2 Linear 233.950 47.190 -254.520 -66.580 -1.000 -2.740 0.000 0.000
  Term: outmf3 Linear 342.940 74.730 -364.370 -95.230 -1.000 -2.780 0.000 0.000
  Term: outmf4 Linear 560.710 130.670 -582.960 -152.240 -1.000 -2.810 0.000 0.000
  Term: outmf5 Linear 1213.880 300.190 -1236.900 -322.800 -1.000 -2.840 0.000 0.000
  Term: outmf6 Linear 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
  Term: outmf7 Linear -1399.120 -382.950 1374.630 358.340 -1.000 -2.900 0.000 0.000
  Term: outmf8 Linear -746.070 -213.420 720.900 187.840 -1.000 -2.930 0.000 0.000
  Term: outmf9 Linear -528.520 -157.460 502.680 130.920 -1.000 -2.960 0.000 0.000
  Term: outmf10 Linear -419.870 -129.890 393.380 102.410 -1.000 -2.980 0.000 0.000
  Term: outmf11 Linear -354.770 -113.680 327.650 85.270 -1.000 -3.010 0.000 0.000
RuleBlock: 
  enabled: true
  conjunction: AlgebraicProduct
  disjunction: Maximum
  activation: AlgebraicProduct
  Rule: if pole_length is mf1 then out is outmf1
  Rule: if pole_length is mf2 then out is outmf2
  Rule: if pole_length is mf3 then out is outmf3
  Rule: if pole_length is mf4 then out is outmf4
  Rule: if pole_length is mf5 then out is outmf5
  Rule: if pole_length is mf6 then out is outmf6
  Rule: if pole_length is mf7 then out is outmf7
  Rule: if pole_length is mf8 then out is outmf8
  Rule: if pole_length is mf9 then out is outmf9
  Rule: if pole_length is mf10 then out is outmf10
  Rule: if pole_length is mf11 then out is outmf11
