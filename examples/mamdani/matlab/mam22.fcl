FUNCTION_BLOCK mam21

VAR_INPUT
  angle: REAL;
  velocity: REAL;
END_VAR

VAR_OUTPUT
  force: REAL;
  force2: REAL;
END_VAR

FUZZIFY angle
  ENABLED : TRUE;
  RANGE := (-5.00000000 .. 5.00000000);
  TERM small := Bell -5.00000000 5.00000000 8.00000000;
  TERM big := Bell 5.00000000 5.00000000 8.00000000;
END_FUZZIFY

FUZZIFY velocity
  ENABLED : TRUE;
  RANGE := (-5.00000000 .. 5.00000000);
  TERM small := Bell -5.00000000 5.00000000 2.00000000;
  TERM big := Bell 5.00000000 5.00000000 2.00000000;
END_FUZZIFY

DEFUZZIFY force
  ENABLED : TRUE;
  RANGE := (-5.00000000 .. 5.00000000);
  TERM negBig := Bell -5.00000000 1.67000000 8.00000000;
  TERM negSmall := Bell -1.67000000 1.67000000 8.00000000;
  TERM posSmall := Bell 1.67000000 1.67000000 8.00000000;
  TERM posBig := Bell 5.00000000 1.67000000 8.00000000;
  METHOD : COG;
  ACCU : MAX;
  DEFAULT := nan;
END_DEFUZZIFY

DEFUZZIFY force2
  ENABLED : TRUE;
  RANGE := (-5.00000000 .. 5.00000000);
  TERM negBig2 := Bell -3.00000000 1.67000000 8.00000000;
  TERM negSmall2 := Bell -1.00000000 1.67000000 8.00000000;
  TERM posSmall2 := Bell 1.00000000 1.67000000 8.00000000;
  TERM posBig2 := Bell 3.00000000 1.67000000 8.00000000;
  METHOD : COG;
  ACCU : MAX;
  DEFAULT := nan;
END_DEFUZZIFY

RULEBLOCK 
  ENABLED : TRUE;
  AND : MIN;
  OR : MAX;
  ACT : MIN;
  RULE 1 : if angle is small and velocity is small then force is negBig and force2 is posBig2
  RULE 2 : if angle is small and velocity is big then force is negSmall and force2 is posSmall2
  RULE 3 : if angle is big and velocity is small then force is posSmall and force2 is negSmall2
  RULE 4 : if angle is big and velocity is big then force is posBig and force2 is negBig2
END_RULEBLOCK

END_FUNCTION_BLOCK
